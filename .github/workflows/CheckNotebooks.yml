name: Check notebooks

on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ['lts', '1.11']
        os: [ubuntu-latest]
        arch: [x64]


    steps:
      - uses: actions/checkout@v5

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2
      
      - name: setup PyCall
        run: julia --project=.devcontainer/PyCallSetup.jl .devcontainer/PyCallSetup.jl/setup.jl

      - uses: julia-actions/julia-buildpkg@v1

      # Convert notebooks to .jl files using nbconvert
      - name: Convert Notebooks to Julia Scripts
        run: |
          for notebook in $(find docs/src notebooks -name "*.ipynb"); do
            echo "Converting $notebook to Julia script"
            pipx run --spec nbconvert jupyter-nbconvert --to script "$notebook"
          done

      # Update HOME variable in nb => .jl scripts
      # HOME = "../.." => "."
      - name: Update Paths in Converted Julia Scripts
        run: |
          for script in $(find docs/src notebooks -name "*.jl"); do
            echo "Updating paths in $script"
            head "$script"
            sed -i 's|^HOME = .*$|HOME = "${{ github.workspace }}"|g' "$script" # replace HOME with path of repo
            sed -i 's|Pkg.add("IceFloeTracker")|Pkg.add(;path="${{ github.workspace }}")|g' "$script"
            sed -i 's|Pkg.add(name="IceFloeTracker".*)|Pkg.add(;path="${{ github.workspace }}")|g' "$script"
            head "$script"
            echo -e "\n=======\n" # divider between scripts
          done

      # Run converted .jl files using Julia
      - name: Run Julia Scripts
        run: |
          EXIT_CODE=0
          for script in $(find docs/src notebooks -name "*.jl"); do
            echo "Running Julia script: $script"
            cat -n "$script"
            julia "$script" || EXIT_CODE=$?
            echo -e "\n=======\n" # divider between scripts
          done
          exit $EXIT_CODE
